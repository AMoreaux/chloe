app.AddClientModel = Backbone.Model.extend({
	defaults : {
		formAdd : {
			'infosClient' : {type:'separator', name : 'Informations pratiques'},
			'lastname' : {type: 'text', name: 'Nom', placeholder:'ex : Dupont'},
			'firstname' : {type: 'text', name: 'Prénom', placeholder:'ex : Mathieu'},
			'mail' : {type: 'email', name: 'Adresse e-mail', placeholder:'ex : mathieu.dupont'},
			'tel' : {type: 'text', name: 'Numéro de téléphone', placeholder:'ex : 06.78.67.45.64'},
			'address' : {type: 'text', name: 'Adresse postale', placeholder:'ex : 26 rue des Rosiers'}, 
			'codePostal' : {type: 'text', name: 'Code Postal', placeholder:'ex : 94300'},
			'city' : {type: 'text', name: 'Ville', placeholder:'ex : Vincennes'},
			'infosPool' : {type:'separator', name : 'Informations sur la piscine'},
			'waterVolume' : {type: 'number', name: 'Volume de la piscine', placeholder:'ex : 35m²'},
			'constructDate' : {type: 'text', name: 'Date de construction', placeholder:'ex : 2005'},
			'picture' : {type: 'file', name: 'Photo de la piscine'},
			'specPool' : {type:'separator', name : 'Matériel de la piscine'},
			'skimmerId' : {type: 'select', name: 'Skimmer', placeholder:'Sélectionnez le modèle de skimmer'},
			'pumpId' : {type: 'select', name: 'Pompe', placeholder:'Sélectionnez le modèle de pompe'},
			'filterId' : {type: 'select', name: 'Filtre', placeholder:'Sélectionnez le modèle de filtre'}
		}
	},
	sendForm:function(data, url, token, callback){
		app.tools.loadJson(urlApi+url+'/'+token, function(data){
			callback.call(this, data);
		}, 'POST', data);
	},
	fetchDataCreation:function(token, callback){
		app.tools.loadJson(urlApi+'dataCreation/'+token, function(data){
			callback.call(this, data);
		});
	}
});
app.HomeModel = Backbone.Model.extend({
	defaults : {
		formRegister : {
			'mail' : {type: 'email', name: 'Adresse e-mail'},
			'name' : {type: 'text', name: 'Nom de l\'entreprise ou du gérant'},
			'password' : {type: 'password', name: 'Mot de passe'},
			'retype_password' : {type: 'password', name: 'Retapez votre mot de passe'}, 
			'address' : {type: 'text', name: 'Adresse postale'}, 
			'city' : {type: 'text', name: 'Ville'},
			'codePostal' : {type: 'text', name: 'Code Postal'},
			'tel' : {type: 'text', name: 'Numéro de téléphone'},
			'siren' : {type: 'text', name: 'Numéro Siren'},
			'logo' : {type: 'file', name: 'Logo de l\'entreprise'}
		},
		formAuth : {
			'mail' : {type: 'email', name: 'Adresse e-mail'},
			'password' : {type: 'password', name: 'Mot de passe'}
		}
	}
});
app.MailModel = Backbone.Model.extend({
	defaults : {
		formMail : {
			'idUserClient' : {type: 'select', name: 'Nom du client'},
			'subject' : {type: 'text', name: 'Object du message'},
			'message' : {type: 'textarea', name: 'Contenu du message'}
		}
	},
	getClientsData:function(token, callback){
        app.tools.loadJson(urlApi+'userpro/clients/'+token, function (clients)  {
            callback.call(this, clients);
        });
    }
});
/**
 * Created by Antoine on 26/02/2015.
 */
app.MapBoxModel = Backbone.Model.extend({
    getClientsData:function(token, callback){
        app.tools.loadJson(urlApi+'userpro/clients/'+token, function (clients)  {
            callback.call(this, clients);
        });
    },

    getClientsDataWithLoader:function(token, callback){
        app.tools.loadJson(urlApi+'userpro/clients/'+token, function (clients)  {
            callback.call(this, clients);
        },'GET', '', true);
    },

    getProData:function(token, callback){
        app.tools.loadJson(urlApi+'userpro/'+token, function (pro)  {
            callback.call(this, pro);
        });
    },

    getLocatePro:function(camera, callback){
        app.tools.loadJson('https://maps.googleapis.com/maps/api/geocode/json?address=' + camera + '&key=AIzaSyClrD_VT4PFkgjAgK5_i1fYBrA3p6UGcBY', function (dataPro)  {
            callback.call(this, dataPro);
        });
    },

    getLocateClient:function(addressReq, callback){
        app.tools.loadJson('https://maps.googleapis.com/maps/api/geocode/json?address=' + addressReq + '&key=AIzaSyClrD_VT4PFkgjAgK5_i1fYBrA3p6UGcBY', function (data)  {
            callback.call(this, data);
        });
    },

    getWeather:function(lng, lat, callback){
        app.tools.loadJson('http://api.openweathermap.org/data/2.5/find?lat='+lat+'&lon='+lng+'&units=metric&appid=95507f0c098fe4bfbe910f1e40870c5c', function (data)  {
            callback.call(this, data);
        });
    }

});

app.SettingsModel = Backbone.Model.extend({
	defaults : {
		formPassword : {
			'password' : {type: 'password', name: 'Mot de passe', placeholder: 'Votre mot de passe'},
			'retype_password' : {type: 'password', name: 'Confirmation mot de passe', name: 'Confirmez votre mot de passe'}
		},
		formMail : {
			'mail' : {type: 'email', name: 'Mon email', placeholder: 'Votre nouvel e-mail'}
		}
	}
});
app.UserClientModel = Backbone.Model.extend({
	set:function(obj){
		for(var i in obj){
			this.attributes[i] = obj[i];
		}
	},
    fetchDataUserClient:function(token, time, id, callback){
    	app.tools.loadJson(urlApi+'userclient/'+id+'/'+time+'/'+token, function(data){
			callback.call(this, data);
		});
	},
	logout:function(token, callback){
		app.tools.loadJson(urlApi+'logout/'+token, function(data){
			callback.call(this, data);
		});
	}
});
app.UserProModel = Backbone.Model.extend({
	set:function(obj){
		for(var i in obj){
			this.attributes[i] = obj[i];
		}
	},
    fetchDataUserPro:function(token, callback){
    	app.tools.loadJson(urlApi+'userpro/'+token, function(data){
			callback.call(this, data);
		});
	},
	logout:function(token, callback){
		app.tools.loadJson(urlApi+'logout/'+token, function(data){
			callback.call(this, data);
		});
	},
	fetchPriorityList:function(token, callback){
        app.tools.loadJson(urlApi+'controls/'+token, function(data){
            callback.call(this, data);
        }, 'GET', '', true);
    },
    fetchAlert:function(token, callback){
        app.tools.loadJson(urlApi+'controls/'+token, function(data){
            callback.call(this, data);
        });
    },
    checked:function(token, id){
        app.tools.loadJson(urlApi+'checkview/'+id+'/'+token, function(data){

        });
    }
});
app.ValidationModel = Backbone.Model.extend({
	sendValidationRequest:function(token, mail, callback){
    	app.tools.loadJson(urlApi+'validation/'+token+'/'+mail, function(data){
			callback.call(this, data);
		});
	}
});
app.ChartModel = Backbone.Model.extend({
    defaults : {
        weather: {
            '01d': {class: 'ion-ios-sunny-outline'},
            '02d': {class: 'ion-ios-partlysunny-outline'},
            '03n': {class: 'ion-ios-cloudy-outline'},
            '03d': {class: 'ion-ios-cloudy-outline'},
            '04d': {class: 'ion-ios-cloudy-outline'},
            '04n': {class: 'ion-ios-cloudy-outline'},
            '09n': {class: 'ion-ios-rainy-outline'},
            '09d': {class: 'ion-ios-rainy-outline'},
            '10n': {class: 'ion-ios-rainy-outline'},
            '10d': {class: 'ion-ios-rainy-outline'},
            '11n': {class: 'ion-ios-thunderstorm-outline'},
            '11d': {class: 'ion-ios-thunderstorm-outline'},
            '13n': {class: 'ion-ios-snowy'},
            '13d': {class: 'ion-ios-snowy'},
            '01n': {class: 'ion-ios-moon-outline'},
            '02n': {class: 'ion-ios-cloudy-night-outline'}
        },
        month: {
            '1': 'Janvier',
            '2': 'Fevrier',
            '3': 'Mars',
            '4': 'Avril',
            '5': 'Mai',
            '6': 'Juin',
            '7': 'Juillet',
            '8': 'Aout',
            '9': 'Septembre',
            '10': 'Octobre',
            '11': 'Novembre',
            '12': 'Decembre'
        }
    },
    getDataGraph:function(token, time, client, callback){
        app.tools.loadJson(urlApi+'userclient/'+client+'/'+time+'/'+token, function (data) {
            callback.call(this, data);
        },'GET', '', true);
    },

    getData:function(token, time, client, callback){
        app.tools.loadJson(urlApi+'userclient/'+client+'/'+time+'/'+token, function (data) {
            callback.call(this, data);
        });
    }
});
